"""
    [문제]

    (Echelon From 사다리꼴, 사다리꼴 행렬은 삼각행렬을 일반화 한 것) 행렬 중
    행의 성분을 사다리꼴 형태가 되도록 위치를 바꿔주는 피보팅 pivoting 과정이 필요합니다.
    해당 행렬에 대항 피보팅 코딩을 해봅시다. (가능하면 가우스 소거까지해봅시다.)

    A = [[0,2,3,4,5],
         [0,0,0,3,2],
         [1,2,3,4,5],
         [0,0,0,6,7],
         [0,0,0,9,9]]

    * pivot: 특정 계산을 수행하기 위한 임의의 알고리즘
             (예: 가우스 소거법 , 단순 알고리즘 등)에 의해 먼저 선택된 행렬의 성분(항,원소)

    * pivoting: 피벗 엔트리(성분)는 일반적으로 적어도 0이 아니어야 하고, 종종 1이 사용되지만 1이 아닌 값도 가능하다.
                이 경우 이러한 성분을 찾는 것을 피벗팅(pivoting)이라고 한다.
"""

import numpy as np

# 구하려는 행렬 선언
A = np.array([[0, 2, 3, 4, 5], [0, 0, 0, 3, 2], [1, 2, 3, 4, 5], [0, 0, 0, 6, 7], [0, 0, 0, 9, 9]])
print(A)

# 'pivot'을 구하기 위해 순서 지정 필요
# 각 행마다 첫 번째 항의 위치가 전체 행렬에서의 위치
def swap(A, B):
    for i in range(len(A)):
        A[i], B[i] = B[i], A[i]
    return A, B

for i in range(len(A)):
    for j in range(len(A[i])):
        if A[i][j] != 0:
            print('{}은 {} 행으로 가즈아~'.format(A[i], j))

            A[i], A[j] = swap(A[i], A[j])
            break

print(A)